[project]
name = "firewatch"
version = "2.0.0"
description = "A tool to monitor results in OpenShift CI and report pod or test failures to Jira."
authors = [{ name = "CSPI QE", email = "cspi-qe@redhat.com" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12,<4"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "click>=8.1.8",
    "google-cloud-storage>=3.1.0",
    "hatchling>=1.27.0",
    "jinja2>=3.1.6",
    "jira>=3.8.0",
    "junitparser>=3.2.0",
    "pyhelper-utils>=1.0.13",
    "python-simple-logger>=2.0.9",
]

[project.urls]
Repository = "https://github.com/CSPI-QE/firewatch"
Homepage = "https://docs.astral.sh/uv"
Download = "https://github.com/CSPI-QE/firewatch"
"Bug Tracker" = "https://github.com/CSPI-QE/firewatch/issues"

[dependency-groups]
commit = [
    "detect-secrets>=1.5.0",
    "flake8>=7.2.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.7",
]
tests = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "requests>=2.32.3",
]

[project.scripts]
firewatch = "src.cli:main"

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.1.7"
google-cloud-storage = "^2.10.0"
jinja2 = "^3.1.4"
jira = "^3.5.2"
junitparser = "^3.1.0"
python-simple-logger = "^1.0.6"
ipdb = "*"
pyhelper-utils = "^0.0.17"

[tool.poetry.group.dev.dependencies]
tox = "^4.11.4"
pre-commit = "*"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
ipython = "*"

[tool.poetry.group.tests.dependencies]
google-cloud-storage = "^2.10.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"

[tool.poetry-dynamic-versioning]
enable = true
pattern = "((?P<epoch>\\d+)!)?(?P<base>\\d+(\\.\\d+)*)"

[tool.poetry-dynamic-versioning.substitution]
files = ["VERSION"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.ruff]
preview = true
line-length = 120
fix = true
output-format = "grouped"

[tool.ruff.format]
exclude = [".git", ".venv", ".mypy_cache", ".tox", "__pycache__"]

[tool.mypy]
check_untyped_defs = "true"
disallow_any_generics = "true"
disallow_incomplete_defs = "true"
disallow_untyped_defs = "true"
no_implicit_optional = "true"
ignore_missing_imports = "true"

[tool.tox]
envlist = ["py312", "py313"]

[tool.tox.env.uv-venv-lock-runner]
requires = ["tox>=4.25"]
#deps = ["pytest"]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
commands = [[
    "pytest",
    "--verbose",
    "--cov=src",
    "--cov-report=html:./tests/unittests/coverage",
    "--cov-fail-under=60",
]]

[tool.pytest.ini_options]
testpaths = [
    "tests/unittests"
]
markers = [
    "unittests"
]
filterwarnings = [
    "ignore::pytest.PytestCollectionWarning"
]
cache_dir = "tests/unittests/.pytest_cache"
